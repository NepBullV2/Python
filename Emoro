static int LF = 1000;                                             // Left Forward
static int RF = 2000;                                             // Right Forward
static int LB = 2000;                                             // Left Back
static int RB = 1000;                                             // Right Back
static int LS = 1500;                                             // Left Stop
static int RS = 1500;                                             // Right stop
int sensorPin = GPP_0;
int follow = 0;                                                     // initialize variable - follow on/off
int cm;

void setup() {

	InitEmoro();                                                    // Initializes all available inputs and outputs on EMoRo 2560.
	EmoroServo.attach(SERVO_0);                                     // Initiates servo on SERVO_1 port.
	EmoroServo.attach(SERVO_1);                                     // Initiates servo on SERVO_2 port.
	Ultrasonic.attach(sensorPin);

	Serial.begin(9600);                                             // initialize serial communication

	pinMode(IO_0, INPUT_PULLUP);                                    // Initiates input mode with pullup - infrared sensor on IO_1 port.
	pinMode(IO_1, INPUT_PULLUP);                                    // Initiates input mode with pullup - infrared sensor on IO_2 port.
}

void loop() {
	while (ReadSwitch(SW_1) == 0 && follow == 0) {                    // wait for switch 1 press if not already following
		delay(10);                                                    // delay 10 ms
	}
	follow = 1;                                                     // switch 1 was pressed - enter following mode
	sensor();
	if (cm > 15)
	{
		if (digitalRead(IO_0) == 1 && digitalRead(IO_1) == 1 && cm > 6) {    // Both sensors are on the white, go forward.
			EmoroServo.write(SERVO_0, LF);                                              // left servo forward 
			EmoroServo.write(SERVO_1, RF);                                              // right servo forward
		}
		else if (digitalRead(IO_0) == 0 && digitalRead(IO_1) == 0) {                  // Both sensors are on the black, stop.
			EmoroServo.write(SERVO_0, LS);                                              // left servo stop
			EmoroServo.write(SERVO_1, RS);                                              // right servo stop
			follow = 0;                                                                   // Goal reached - exit following mode
		}
		else if (digitalRead(IO_0) == 0 && cm >= 6) {                        // Only left sensor is on the black, turn right.
			EmoroServo.write(SERVO_0, LF);                                              // left servo forward
			EmoroServo.write(SERVO_1, RB);                                              // right servo backwards
			delay(20);                                                                  // delay 20 ms

		}
		else if (digitalRead(IO_1) == 0 && cm >= 6) {                       // Only right sensor is on the black, turn left.
			EmoroServo.write(SERVO_0, LB);                                              // left servo backwards
			EmoroServo.write(SERVO_1, RF);                                              // right servo forwawrd
			delay(20);                                                                  // delay 20 ms
		}
	}
	else
	{
		//Initiate avoid obstacle. Turn right, then move forward, then turn left, then return to lane.
		EmoroServo.write(SERVO_0, LF);
		EmoroServo.write(SERVO_1, RB);
		delay(1000);
		EmoroServo.write(SERVO_0, LF);
		EmoroServo.write(SERVO_1, RF);
		delay(1500);
		EmoroServo.write(SERVO_0, LB);
		EmoroServo.write(SERVO_1, RF);
		delay(2000);
		EmoroServo.write(SERVO_0, LF);
		EmoroServo.write(SERVO_1, RF);
		delay(1500);
	}
}
